@model OCR_DotNet_P5_ExpressVoitures.Models.ViewModels.CarModel

@{
    ViewData["Title"] = "Ajouter";
}

<div class="div-center page-title">Ajouter</div>
<br />
<form enctype="multipart/form-data" asp-action="Create">
    @Html.AntiForgeryToken()
    <div class="d-flex flex-row justify-content-around">
        <vc:image-uploader field-name="@nameof(Model.UploadedImage)"></vc:image-uploader>
        <table class="tbl-thumbnail-infos">
            <tr>
                <td class="thumbnail-infos-label"><label asp-for="@Model.Year" class="control-label" min="1990"></label></td>
                <td>
                    <input asp-for="Year" class="form-control" />
                    <span asp-validation-for="Year" class="text-danger"></span>
                </td>
            </tr>
            <tr>
                <td><label asp-for="@Model.IdBrand" class="control-label"></label></td>
                <td>
                    <select asp-for="IdBrand" id="Brands" name="IdBrand" class="form-control"></select>
                    <span asp-validation-for="IdBrand" class="text-danger"></span>
                </td>
            </tr>
            <tr>
                <td><label asp-for="@Model.IdModel" class="control-label"></label></td>
                <td>
                    <select asp-for="IdModel" id="Models" name="IdModel" class="form-control"></select>
                    <span asp-validation-for="IdModel" class="text-danger"></span>
                </td>
            </tr>
            <tr>
                <td><label asp-for="@Model.IdFinish" class="control-label"></label></td>
                <td>
                    <select asp-for="IdFinish" id="Finishes" name="IdFinish" class="form-control"></select>
                    <span asp-validation-for="IdFinish" class="text-danger"></span>
                </td>
            </tr>
            <tr>
                <td><label asp-for="@Model.VIN" class="control-label"></label></td>
                <td>
                    <input asp-for="VIN" class="form-control" />
                    <span asp-validation-for="VIN" class="text-danger"></span>
                </td>
            </tr>
            <tr>
                <td><label asp-for="@Model.DateOfBuy" class="control-label"></label></td>
                <td>
                    @Html.TextBoxFor(x => x.DateOfBuy, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
                    <span asp-validation-for="DateOfBuy" class="text-danger"></span>
                </td>
            </tr>
            <tr>
                <td><label asp-for="@Model.Price" class="control-label"></label></td>
                <td>
                    <input asp-for="Price" class="form-control" />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </td>
            </tr>
            <tr>
                <td><label asp-for="@Model.RepairDescription" class="control-label"></label></td>
                <td>
                    <textarea asp-for="RepairDescription" class="form-control"></textarea>
                    <span asp-validation-for="RepairDescription" class="text-danger"></span>
                </td>
            </tr>
            <tr>
                <td><label asp-for="@Model.RepairCost" class="control-label"></label></td>
                <td>
                    <input asp-for="RepairCost" class="form-control" />
                    <span asp-validation-for="RepairCost" class="text-danger"></span>
                </td>
            </tr>
            <tr>
                <td><label asp-for="@Model.DateOfRepair" class="control-label"></label></td>
                <td>
                    @Html.TextBoxFor(x => x.DateOfRepair, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
                    <span asp-validation-for="DateOfRepair" class="text-danger"></span>
                </td>
            </tr>
            <tr>
                <td><label asp-for="@Model.DateOfAvailabilityForSale" class="control-label"></label></td>
                <td>
                    @Html.TextBoxFor(x => x.DateOfAvailabilityForSale, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
                    <span asp-validation-for="DateOfAvailabilityForSale" class="text-danger"></span>
                </td>
            </tr>
            <tr>
                <td><label asp-for="@Model.Description" class="control-label"></label></td>
                <td>
                    <textarea asp-for="Description" class="form-control"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </td>
            </tr>
            <tr>
                <td><label asp-for="@Model.DateOfSale" class="control-label"></label></td>
                <td>
                    @Html.TextBoxFor(x => x.DateOfSale, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
                    <span asp-validation-for="DateOfSale" class="text-danger"></span>
                </td>
            </tr>
        </table>
    </div>
    <br />
    <div class="d-flex flex-row justify-content-center">
        <a asp-action="Index" class="btn btn-action">Annuler</a>
        &nbsp;
        <input type="submit" value="Publier" class="btn btn-action" />
    </div>
</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function ()
        {
            /** Initialization of Brands, Models and Finishes lists + selection */
            var idBrand = @Html.Raw(Json.Serialize(Model.IdBrand));
            var idModel = @Html.Raw(Json.Serialize(Model.IdModel));
            var idFinish = @Html.Raw(Json.Serialize(Model.IdFinish));
            $.getJSON('@Url.Action("GetBrands")', { IdBrand: idBrand }, function (brands)
            {
                var brandsSelect = $('#Brands');
                brandsSelect.empty();
                $.each(brands, function (index, brand)
                {
                    brandsSelect.append($('<option/>', {
                        value: brand.value,
                        text: brand.text,
                        selected: brand.value === idBrand.toString()
                    }));
                });
            });

            $.getJSON('@Url.Action("GetModels")', { IdBrand: idBrand }, function (models)
            {
                var modelsSelect = $('#Models');
                modelsSelect.empty();
                $.each(models, function (index, model)
                {
                    modelsSelect.append($('<option/>', {
                        value: model.value,
                        text: model.text,
                        selected: model.value === idModel.toString()
                    }));
                });
            });

            $.getJSON('@Url.Action("GetFinishes")', { IdModel: idModel }, function (finishes)
            {
                var finishesSelect = $('#Finishes');
                finishesSelect.empty();
                $.each(finishes, function (index, finish)
                {
                    finishesSelect.append($('<option/>', {
                        value: finish.value,
                        text: finish.text,
                        selected: finish.value === idFinish.toString()
                    }));
                });
            });

            /** Add change event on Brands and Models lists in order to update depending lists */
            $('#Brands').change(function ()
            {
                var idBrand = $(this).val();
                var firstModel = -1;
                $.getJSON('@Url.Action("GetModels")', { IdBrand: idBrand }, function (models)
                {
                    var modelsSelect = $('#Models');
                    modelsSelect.empty();
                    $.each(models, function (index, model)
                    {
                        if (firstModel == -1)
                        {
                            firstModel = model.value;
                            $.getJSON('@Url.Action("GetFinishes")', { IdModel: firstModel }, function (finishes)
                            {
                                var finishesSelect = $('#Finishes');
                                finishesSelect.empty();
                                $.each(finishes, function (index, finish)
                                {
                                    finishesSelect.append($('<option/>', {
                                        value: finish.value,
                                        text: finish.text
                                    }));
                                });
                            });
                        }
                        modelsSelect.append($('<option/>', {
                            value: model.value,
                            text: model.text
                        }));
                    });
                });
            });

            $('#Models').change(function ()
            {
                var idModel = $(this).val();
                $.getJSON('@Url.Action("GetFinishes")', { IdModel: idModel }, function (finishes)
                {
                    var finishesSelect = $('#Finishes');
                    finishesSelect.empty();
                    $.each(finishes, function (index, finish)
                    {
                        finishesSelect.append($('<option/>', {
                            value: finish.value,
                            text: finish.text
                        }));
                    });
                });
            });
        });
    </script>
}
